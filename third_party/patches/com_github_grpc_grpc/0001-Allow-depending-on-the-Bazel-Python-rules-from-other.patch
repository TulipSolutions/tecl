From 8bf106bf50004eb25c6163f9eb7bbe4b620d5e6a Mon Sep 17 00:00:00 2001
From: Gert van Dijk <gert.vandijk@tulipsolutions.nl>
Date: Thu, 30 Jan 2020 15:37:34 +0100
Subject: [PATCH 1/2] Allow depending on the Bazel Python rules from other
 workspaces

Fixes: https://github.com/grpc/grpc/issues/21830
---
 bazel/protobuf.bzl | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git bazel/protobuf.bzl bazel/protobuf.bzl
index 7af27a8b30..a1ad170796 100644
--- bazel/protobuf.bzl
+++ bazel/protobuf.bzl
@@ -219,16 +219,16 @@ def get_out_dir(protos, context):
             at_least_one_virtual = True
         elif at_least_one_virtual:
             fail("Proto sources must be either all virtual imports or all real")
+    ws_root = protos[0].owner.workspace_root
+    import_path = None
     if at_least_one_virtual:
         out_dir = get_include_directory(protos[0])
-        ws_root = protos[0].owner.workspace_root
         if ws_root and out_dir.find(ws_root) >= 0:
             out_dir = "".join(out_dir.rsplit(ws_root, 1))
-        return struct(
-            path = out_dir,
-            import_path = out_dir[out_dir.find(_VIRTUAL_IMPORTS) + 1:],
-        )
-    return struct(path = context.genfiles_dir.path, import_path = None)
+        import_path = out_dir[out_dir.find(_VIRTUAL_IMPORTS) + 1:]
+    else:
+        out_dir = "/".join([context.genfiles_dir.path, ws_root])
+    return struct(path = out_dir, import_path = import_path)
 
 def is_in_virtual_imports(source_file, virtual_folder = _VIRTUAL_IMPORTS):
     """Determines if source_file is virtual (is placed in _virtual_imports

base-commit: 8cf19cfdd840731bb31665a757fd1074e58e8ce4
-- 
2.25.0

