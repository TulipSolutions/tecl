From 3a808d8eed4a7c0c8fe18444fc17b792aad9b946 Mon Sep 17 00:00:00 2001
From: Gert van Dijk <gert.vandijk@tulipsolutions.nl>
Date: Wed, 24 Apr 2019 13:40:53 +0200
Subject: [PATCH 2/2] Set gRPC method name in OpenCensus statistics

Cherry-picking three commits from PR#5601
Author: Patrick Niklaus <patrick@rideos.ai>

* 9df71463a core: Fix checkstyle warning
* 232ef58cd core: Adjust CensusModules test cases for new grpc_{server,client}_method tag
* 8658b7e60 core: Set new OpenCensus tags for the gRPC method
---
 .../io/grpc/internal/CensusStatsModule.java   |  2 +
 .../io/grpc/internal/CensusModulesTest.java   | 40 ++++++++++++++-----
 2 files changed, 33 insertions(+), 9 deletions(-)

diff --git core/src/main/java/io/grpc/internal/CensusStatsModule.java core/src/main/java/io/grpc/internal/CensusStatsModule.java
index 385cfdc97..1f2604218 100644
--- core/src/main/java/io/grpc/internal/CensusStatsModule.java
+++ core/src/main/java/io/grpc/internal/CensusStatsModule.java
@@ -357,6 +357,7 @@ public final class CensusStatsModule {
       TagValue methodTag = TagValue.create(fullMethodName);
       this.startCtx = module.tagger.toBuilder(parentCtx)
           .put(DeprecatedCensusConstants.RPC_METHOD, methodTag)
+          .put(RpcMeasureConstants.GRPC_CLIENT_METHOD, methodTag)
           .build();
       this.stopwatch = module.stopwatchSupplier.get().start();
       if (module.recordStartedRpcs) {
@@ -673,6 +674,7 @@ public final class CensusStatsModule {
           tagger
               .toBuilder(parentCtx)
               .put(DeprecatedCensusConstants.RPC_METHOD, methodTag)
+              .put(RpcMeasureConstants.GRPC_SERVER_METHOD, methodTag)
               .build();
       return new ServerTracer(CensusStatsModule.this, parentCtx);
     }
diff --git core/src/test/java/io/grpc/internal/CensusModulesTest.java core/src/test/java/io/grpc/internal/CensusModulesTest.java
index 6774be012..b4e9dcaff 100644
--- core/src/test/java/io/grpc/internal/CensusModulesTest.java
+++ core/src/test/java/io/grpc/internal/CensusModulesTest.java
@@ -297,14 +297,16 @@ public class CensusModulesTest {
     StatsTestUtils.MetricsRecord record = statsRecorder.pollRecord();
     assertNotNull(record);
     TagValue methodTagOld = record.tags.get(DeprecatedCensusConstants.RPC_METHOD);
+    TagValue methodTagNew = record.tags.get(RpcMeasureConstants.GRPC_CLIENT_METHOD);
     assertEquals(method.getFullMethodName(), methodTagOld.asString());
+    assertEquals(method.getFullMethodName(), methodTagNew.asString());
     if (nonDefaultContext) {
       TagValue extraTag = record.tags.get(StatsTestUtils.EXTRA_TAG);
       assertEquals("extra value", extraTag.asString());
-      assertEquals(2, record.tags.size());
+      assertEquals(3, record.tags.size());
     } else {
       assertNull(record.tags.get(StatsTestUtils.EXTRA_TAG));
-      assertEquals(1, record.tags.size());
+      assertEquals(2, record.tags.size());
     }
 
     if (nonDefaultContext) {
@@ -391,7 +393,7 @@ public class CensusModulesTest {
       StatsTestUtils.MetricsRecord record = statsRecorder.pollRecord();
       assertNotNull(record);
       assertNoServerContent(record);
-      assertEquals(1, record.tags.size());
+      assertEquals(2, record.tags.size());
       TagValue methodTagOld = record.tags.get(DeprecatedCensusConstants.RPC_METHOD);
       assertEquals(method.getFullMethodName(), methodTagOld.asString());
       assertEquals(
@@ -571,9 +573,11 @@ public class CensusModulesTest {
     StatsTestUtils.MetricsRecord record = statsRecorder.pollRecord();
     assertNotNull(record);
     assertNoServerContent(record);
-    assertEquals(1, record.tags.size());
+    assertEquals(2, record.tags.size());
     TagValue methodTagOld = record.tags.get(DeprecatedCensusConstants.RPC_METHOD);
+    TagValue methodTagNew = record.tags.get(RpcMeasureConstants.GRPC_CLIENT_METHOD);
     assertEquals(method.getFullMethodName(), methodTagOld.asString());
+    assertEquals(method.getFullMethodName(), methodTagNew.asString());
     assertEquals(
         1,
         record.getMetricAsLongOrFail(DeprecatedCensusConstants.RPC_CLIENT_STARTED_COUNT));
@@ -583,7 +587,9 @@ public class CensusModulesTest {
     assertNotNull(record);
     assertNoServerContent(record);
     methodTagOld = record.tags.get(DeprecatedCensusConstants.RPC_METHOD);
+    methodTagNew = record.tags.get(RpcMeasureConstants.GRPC_CLIENT_METHOD);
     assertEquals(method.getFullMethodName(), methodTagOld.asString());
+    assertEquals(method.getFullMethodName(), methodTagNew.asString());
     TagValue statusTagOld = record.tags.get(DeprecatedCensusConstants.RPC_STATUS);
     assertEquals(Status.Code.DEADLINE_EXCEEDED.toString(), statusTagOld.asString());
     assertEquals(
@@ -675,9 +681,11 @@ public class CensusModulesTest {
       StatsTestUtils.MetricsRecord clientRecord = statsRecorder.pollRecord();
       assertNotNull(clientRecord);
       assertNoServerContent(clientRecord);
-      assertEquals(2, clientRecord.tags.size());
+      assertEquals(3, clientRecord.tags.size());
       TagValue clientMethodTagOld = clientRecord.tags.get(DeprecatedCensusConstants.RPC_METHOD);
+      TagValue clientMethodTagNew = clientRecord.tags.get(RpcMeasureConstants.GRPC_CLIENT_METHOD);
       assertEquals(method.getFullMethodName(), clientMethodTagOld.asString());
+      assertEquals(method.getFullMethodName(), clientMethodTagNew.asString());
       TagValue clientPropagatedTag = clientRecord.tags.get(StatsTestUtils.EXTRA_TAG);
       assertEquals("extra-tag-value-897", clientPropagatedTag.asString());
     }
@@ -700,6 +708,9 @@ public class CensusModulesTest {
             .put(
                 DeprecatedCensusConstants.RPC_METHOD,
                 TagValue.create(method.getFullMethodName()))
+            .put(
+                RpcMeasureConstants.GRPC_SERVER_METHOD,
+                TagValue.create(method.getFullMethodName()))
             .build(),
         TAG_CONTEXT_KEY.get(serverContext));
 
@@ -711,9 +722,11 @@ public class CensusModulesTest {
       StatsTestUtils.MetricsRecord serverRecord = statsRecorder.pollRecord();
       assertNotNull(serverRecord);
       assertNoClientContent(serverRecord);
-      assertEquals(2, serverRecord.tags.size());
+      assertEquals(3, serverRecord.tags.size());
       TagValue serverMethodTagOld = serverRecord.tags.get(DeprecatedCensusConstants.RPC_METHOD);
+      TagValue serverMethodTagNew = serverRecord.tags.get(RpcMeasureConstants.GRPC_SERVER_METHOD);
       assertEquals(method.getFullMethodName(), serverMethodTagOld.asString());
+      assertEquals(method.getFullMethodName(), serverMethodTagNew.asString());
       TagValue serverPropagatedTag = serverRecord.tags.get(StatsTestUtils.EXTRA_TAG);
       assertEquals("extra-tag-value-897", serverPropagatedTag.asString());
 
@@ -721,10 +734,12 @@ public class CensusModulesTest {
       serverRecord = statsRecorder.pollRecord();
       assertNotNull(serverRecord);
       assertNoClientContent(serverRecord);
-      serverMethodTagOld = serverRecord.tags.get(DeprecatedCensusConstants.RPC_METHOD);
-      assertEquals(method.getFullMethodName(), serverMethodTagOld.asString());
       TagValue serverStatusTagOld = serverRecord.tags.get(DeprecatedCensusConstants.RPC_STATUS);
+      serverMethodTagOld = serverRecord.tags.get(DeprecatedCensusConstants.RPC_METHOD);
+      serverMethodTagNew = serverRecord.tags.get(RpcMeasureConstants.GRPC_SERVER_METHOD);
       assertEquals(Status.Code.OK.toString(), serverStatusTagOld.asString());
+      assertEquals(method.getFullMethodName(), serverMethodTagOld.asString());
+      assertEquals(method.getFullMethodName(), serverMethodTagNew.asString());
       assertNull(serverRecord.getMetric(DeprecatedCensusConstants.RPC_SERVER_ERROR_COUNT));
       serverPropagatedTag = serverRecord.tags.get(StatsTestUtils.EXTRA_TAG);
       assertEquals("extra-tag-value-897", serverPropagatedTag.asString());
@@ -740,7 +755,9 @@ public class CensusModulesTest {
       assertNotNull(clientRecord);
       assertNoServerContent(clientRecord);
       TagValue clientMethodTagOld = clientRecord.tags.get(DeprecatedCensusConstants.RPC_METHOD);
+      TagValue clientMethodTagNew = clientRecord.tags.get(RpcMeasureConstants.GRPC_CLIENT_METHOD);
       assertEquals(method.getFullMethodName(), clientMethodTagOld.asString());
+      assertEquals(method.getFullMethodName(), clientMethodTagNew.asString());
       TagValue clientStatusTagOld = clientRecord.tags.get(DeprecatedCensusConstants.RPC_STATUS);
       assertEquals(Status.Code.OK.toString(), clientStatusTagOld.asString());
       assertNull(clientRecord.getMetric(DeprecatedCensusConstants.RPC_CLIENT_ERROR_COUNT));
@@ -918,9 +935,11 @@ public class CensusModulesTest {
       StatsTestUtils.MetricsRecord record = statsRecorder.pollRecord();
       assertNotNull(record);
       assertNoClientContent(record);
-      assertEquals(1, record.tags.size());
+      assertEquals(2, record.tags.size());
       TagValue methodTagOld = record.tags.get(DeprecatedCensusConstants.RPC_METHOD);
+      TagValue methodTagNew = record.tags.get(RpcMeasureConstants.GRPC_SERVER_METHOD);
       assertEquals(method.getFullMethodName(), methodTagOld.asString());
+      assertEquals(method.getFullMethodName(), methodTagNew.asString());
       assertEquals(
           1,
           record.getMetricAsLongOrFail(DeprecatedCensusConstants.RPC_SERVER_STARTED_COUNT));
@@ -936,6 +955,9 @@ public class CensusModulesTest {
             .put(
                 DeprecatedCensusConstants.RPC_METHOD,
                 TagValue.create(method.getFullMethodName()))
+            .put(
+                RpcMeasureConstants.GRPC_SERVER_METHOD,
+                TagValue.create(method.getFullMethodName()))
             .build(),
         statsCtx);
 
-- 
2.21.0

